{"version":3,"file":"245.js","mappings":"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","sources":["webpack:///../../@aws-sdk/client-cognito-identity-provider/node_modules/@aws-sdk/client-sts/dist-es/endpoint/EndpointParameters.js","webpack:///../../@aws-sdk/client-cognito-identity-provider/node_modules/@aws-sdk/client-sts/dist-es/models/STSServiceException.js","webpack:///../../@aws-sdk/client-cognito-identity-provider/node_modules/@aws-sdk/client-sts/dist-es/models/models_0.js","webpack:///../../@aws-sdk/client-cognito-identity-provider/node_modules/@aws-sdk/client-sts/dist-es/protocols/Aws_query.js","webpack:///../../@aws-sdk/client-cognito-identity-provider/node_modules/@aws-sdk/client-sts/dist-es/commands/AssumeRoleCommand.js","webpack:///../../@aws-sdk/client-cognito-identity-provider/node_modules/@aws-sdk/client-sts/dist-es/commands/AssumeRoleWithWebIdentityCommand.js","webpack:///../../@aws-sdk/client-cognito-identity-provider/node_modules/@aws-sdk/client-sts/dist-es/defaultStsRoleAssumers.js","webpack:///../../@aws-sdk/client-cognito-identity-provider/node_modules/@aws-sdk/client-sts/dist-es/auth/httpAuthSchemeProvider.js","webpack:///../../@aws-sdk/client-cognito-identity-provider/node_modules/@aws-sdk/client-sts/dist-es/credentialDefaultProvider.js","webpack:///../../@aws-sdk/client-cognito-identity-provider/node_modules/@aws-sdk/client-sts/dist-es/endpoint/ruleset.js","webpack:///../../@aws-sdk/client-cognito-identity-provider/node_modules/@aws-sdk/client-sts/dist-es/endpoint/endpointResolver.js","webpack:///../../@aws-sdk/client-cognito-identity-provider/node_modules/@aws-sdk/client-sts/dist-es/runtimeConfig.shared.js","webpack:///../../@aws-sdk/client-cognito-identity-provider/node_modules/@aws-sdk/client-sts/dist-es/runtimeConfig.js","webpack:///../../@aws-sdk/client-cognito-identity-provider/node_modules/@aws-sdk/client-sts/dist-es/auth/httpAuthExtensionConfiguration.js","webpack:///../../@aws-sdk/client-cognito-identity-provider/node_modules/@aws-sdk/client-sts/dist-es/runtimeExtensions.js","webpack:///../../@aws-sdk/client-cognito-identity-provider/node_modules/@aws-sdk/client-sts/dist-es/STSClient.js","webpack:///../../@aws-sdk/client-cognito-identity-provider/node_modules/@aws-sdk/client-sts/dist-es/defaultRoleAssumers.js"],"sourcesContent":["export const resolveClientEndpointParameters = (options) => {\n    return {\n        ...options,\n        useDualstackEndpoint: options.useDualstackEndpoint ?? false,\n        useFipsEndpoint: options.useFipsEndpoint ?? false,\n        useGlobalEndpoint: options.useGlobalEndpoint ?? false,\n        defaultSigningName: \"sts\",\n    };\n};\nexport const commonParams = {\n    UseGlobalEndpoint: { type: \"builtInParams\", name: \"useGlobalEndpoint\" },\n    UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n    Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n    Region: { type: \"builtInParams\", name: \"region\" },\n    UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n};\n","import { ServiceException as __ServiceException, } from \"@smithy/smithy-client\";\nexport { __ServiceException };\nexport class STSServiceException extends __ServiceException {\n    constructor(options) {\n        super(options);\n        Object.setPrototypeOf(this, STSServiceException.prototype);\n    }\n}\n","import { SENSITIVE_STRING } from \"@smithy/smithy-client\";\nimport { STSServiceException as __BaseException } from \"./STSServiceException\";\nexport class ExpiredTokenException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"ExpiredTokenException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"ExpiredTokenException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ExpiredTokenException.prototype);\n    }\n}\nexport class MalformedPolicyDocumentException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"MalformedPolicyDocumentException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"MalformedPolicyDocumentException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, MalformedPolicyDocumentException.prototype);\n    }\n}\nexport class PackedPolicyTooLargeException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"PackedPolicyTooLargeException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"PackedPolicyTooLargeException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, PackedPolicyTooLargeException.prototype);\n    }\n}\nexport class RegionDisabledException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"RegionDisabledException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"RegionDisabledException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, RegionDisabledException.prototype);\n    }\n}\nexport class IDPRejectedClaimException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"IDPRejectedClaimException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"IDPRejectedClaimException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, IDPRejectedClaimException.prototype);\n    }\n}\nexport class InvalidIdentityTokenException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"InvalidIdentityTokenException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidIdentityTokenException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidIdentityTokenException.prototype);\n    }\n}\nexport class IDPCommunicationErrorException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"IDPCommunicationErrorException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"IDPCommunicationErrorException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, IDPCommunicationErrorException.prototype);\n    }\n}\nexport class InvalidAuthorizationMessageException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"InvalidAuthorizationMessageException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidAuthorizationMessageException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidAuthorizationMessageException.prototype);\n    }\n}\nexport const CredentialsFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.SecretAccessKey && { SecretAccessKey: SENSITIVE_STRING }),\n});\nexport const AssumeRoleResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Credentials && { Credentials: CredentialsFilterSensitiveLog(obj.Credentials) }),\n});\nexport const AssumeRoleWithSAMLRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.SAMLAssertion && { SAMLAssertion: SENSITIVE_STRING }),\n});\nexport const AssumeRoleWithSAMLResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Credentials && { Credentials: CredentialsFilterSensitiveLog(obj.Credentials) }),\n});\nexport const AssumeRoleWithWebIdentityRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.WebIdentityToken && { WebIdentityToken: SENSITIVE_STRING }),\n});\nexport const AssumeRoleWithWebIdentityResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Credentials && { Credentials: CredentialsFilterSensitiveLog(obj.Credentials) }),\n});\nexport const GetFederationTokenResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Credentials && { Credentials: CredentialsFilterSensitiveLog(obj.Credentials) }),\n});\nexport const GetSessionTokenResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Credentials && { Credentials: CredentialsFilterSensitiveLog(obj.Credentials) }),\n});\n","import { HttpRequest as __HttpRequest } from \"@smithy/protocol-http\";\nimport { collectBody, decorateServiceException as __decorateServiceException, expectNonNull as __expectNonNull, expectString as __expectString, extendedEncodeURIComponent as __extendedEncodeURIComponent, getValueFromTextNode as __getValueFromTextNode, parseRfc3339DateTimeWithOffset as __parseRfc3339DateTimeWithOffset, strictParseInt32 as __strictParseInt32, withBaseException, } from \"@smithy/smithy-client\";\nimport { XMLParser } from \"fast-xml-parser\";\nimport { ExpiredTokenException, IDPCommunicationErrorException, IDPRejectedClaimException, InvalidAuthorizationMessageException, InvalidIdentityTokenException, MalformedPolicyDocumentException, PackedPolicyTooLargeException, RegionDisabledException, } from \"../models/models_0\";\nimport { STSServiceException as __BaseException } from \"../models/STSServiceException\";\nexport const se_AssumeRoleCommand = async (input, context) => {\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_AssumeRoleRequest(input, context),\n        [_A]: _AR,\n        [_V]: _,\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_AssumeRoleWithSAMLCommand = async (input, context) => {\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_AssumeRoleWithSAMLRequest(input, context),\n        [_A]: _ARWSAML,\n        [_V]: _,\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_AssumeRoleWithWebIdentityCommand = async (input, context) => {\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_AssumeRoleWithWebIdentityRequest(input, context),\n        [_A]: _ARWWI,\n        [_V]: _,\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_DecodeAuthorizationMessageCommand = async (input, context) => {\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_DecodeAuthorizationMessageRequest(input, context),\n        [_A]: _DAM,\n        [_V]: _,\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_GetAccessKeyInfoCommand = async (input, context) => {\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_GetAccessKeyInfoRequest(input, context),\n        [_A]: _GAKI,\n        [_V]: _,\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_GetCallerIdentityCommand = async (input, context) => {\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_GetCallerIdentityRequest(input, context),\n        [_A]: _GCI,\n        [_V]: _,\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_GetFederationTokenCommand = async (input, context) => {\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_GetFederationTokenRequest(input, context),\n        [_A]: _GFT,\n        [_V]: _,\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_GetSessionTokenCommand = async (input, context) => {\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_GetSessionTokenRequest(input, context),\n        [_A]: _GST,\n        [_V]: _,\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const de_AssumeRoleCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_AssumeRoleResponse(data.AssumeRoleResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nexport const de_AssumeRoleWithSAMLCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_AssumeRoleWithSAMLResponse(data.AssumeRoleWithSAMLResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nexport const de_AssumeRoleWithWebIdentityCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_AssumeRoleWithWebIdentityResponse(data.AssumeRoleWithWebIdentityResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nexport const de_DecodeAuthorizationMessageCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_DecodeAuthorizationMessageResponse(data.DecodeAuthorizationMessageResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nexport const de_GetAccessKeyInfoCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_GetAccessKeyInfoResponse(data.GetAccessKeyInfoResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nexport const de_GetCallerIdentityCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_GetCallerIdentityResponse(data.GetCallerIdentityResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nexport const de_GetFederationTokenCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_GetFederationTokenResponse(data.GetFederationTokenResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nexport const de_GetSessionTokenCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_GetSessionTokenResponse(data.GetSessionTokenResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_CommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ExpiredTokenException\":\n        case \"com.amazonaws.sts#ExpiredTokenException\":\n            throw await de_ExpiredTokenExceptionRes(parsedOutput, context);\n        case \"MalformedPolicyDocument\":\n        case \"com.amazonaws.sts#MalformedPolicyDocumentException\":\n            throw await de_MalformedPolicyDocumentExceptionRes(parsedOutput, context);\n        case \"PackedPolicyTooLarge\":\n        case \"com.amazonaws.sts#PackedPolicyTooLargeException\":\n            throw await de_PackedPolicyTooLargeExceptionRes(parsedOutput, context);\n        case \"RegionDisabledException\":\n        case \"com.amazonaws.sts#RegionDisabledException\":\n            throw await de_RegionDisabledExceptionRes(parsedOutput, context);\n        case \"IDPRejectedClaim\":\n        case \"com.amazonaws.sts#IDPRejectedClaimException\":\n            throw await de_IDPRejectedClaimExceptionRes(parsedOutput, context);\n        case \"InvalidIdentityToken\":\n        case \"com.amazonaws.sts#InvalidIdentityTokenException\":\n            throw await de_InvalidIdentityTokenExceptionRes(parsedOutput, context);\n        case \"IDPCommunicationError\":\n        case \"com.amazonaws.sts#IDPCommunicationErrorException\":\n            throw await de_IDPCommunicationErrorExceptionRes(parsedOutput, context);\n        case \"InvalidAuthorizationMessageException\":\n        case \"com.amazonaws.sts#InvalidAuthorizationMessageException\":\n            throw await de_InvalidAuthorizationMessageExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst de_ExpiredTokenExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = de_ExpiredTokenException(body.Error, context);\n    const exception = new ExpiredTokenException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_IDPCommunicationErrorExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = de_IDPCommunicationErrorException(body.Error, context);\n    const exception = new IDPCommunicationErrorException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_IDPRejectedClaimExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = de_IDPRejectedClaimException(body.Error, context);\n    const exception = new IDPRejectedClaimException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_InvalidAuthorizationMessageExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = de_InvalidAuthorizationMessageException(body.Error, context);\n    const exception = new InvalidAuthorizationMessageException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_InvalidIdentityTokenExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = de_InvalidIdentityTokenException(body.Error, context);\n    const exception = new InvalidIdentityTokenException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_MalformedPolicyDocumentExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = de_MalformedPolicyDocumentException(body.Error, context);\n    const exception = new MalformedPolicyDocumentException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_PackedPolicyTooLargeExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = de_PackedPolicyTooLargeException(body.Error, context);\n    const exception = new PackedPolicyTooLargeException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_RegionDisabledExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = de_RegionDisabledException(body.Error, context);\n    const exception = new RegionDisabledException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst se_AssumeRoleRequest = (input, context) => {\n    const entries = {};\n    if (input[_RA] != null) {\n        entries[_RA] = input[_RA];\n    }\n    if (input[_RSN] != null) {\n        entries[_RSN] = input[_RSN];\n    }\n    if (input[_PA] != null) {\n        const memberEntries = se_policyDescriptorListType(input[_PA], context);\n        if (input[_PA]?.length === 0) {\n            entries.PolicyArns = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `PolicyArns.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input[_P] != null) {\n        entries[_P] = input[_P];\n    }\n    if (input[_DS] != null) {\n        entries[_DS] = input[_DS];\n    }\n    if (input[_T] != null) {\n        const memberEntries = se_tagListType(input[_T], context);\n        if (input[_T]?.length === 0) {\n            entries.Tags = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `Tags.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input[_TTK] != null) {\n        const memberEntries = se_tagKeyListType(input[_TTK], context);\n        if (input[_TTK]?.length === 0) {\n            entries.TransitiveTagKeys = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `TransitiveTagKeys.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input[_EI] != null) {\n        entries[_EI] = input[_EI];\n    }\n    if (input[_SN] != null) {\n        entries[_SN] = input[_SN];\n    }\n    if (input[_TC] != null) {\n        entries[_TC] = input[_TC];\n    }\n    if (input[_SI] != null) {\n        entries[_SI] = input[_SI];\n    }\n    if (input[_PC] != null) {\n        const memberEntries = se_ProvidedContextsListType(input[_PC], context);\n        if (input[_PC]?.length === 0) {\n            entries.ProvidedContexts = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `ProvidedContexts.${key}`;\n            entries[loc] = value;\n        });\n    }\n    return entries;\n};\nconst se_AssumeRoleWithSAMLRequest = (input, context) => {\n    const entries = {};\n    if (input[_RA] != null) {\n        entries[_RA] = input[_RA];\n    }\n    if (input[_PAr] != null) {\n        entries[_PAr] = input[_PAr];\n    }\n    if (input[_SAMLA] != null) {\n        entries[_SAMLA] = input[_SAMLA];\n    }\n    if (input[_PA] != null) {\n        const memberEntries = se_policyDescriptorListType(input[_PA], context);\n        if (input[_PA]?.length === 0) {\n            entries.PolicyArns = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `PolicyArns.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input[_P] != null) {\n        entries[_P] = input[_P];\n    }\n    if (input[_DS] != null) {\n        entries[_DS] = input[_DS];\n    }\n    return entries;\n};\nconst se_AssumeRoleWithWebIdentityRequest = (input, context) => {\n    const entries = {};\n    if (input[_RA] != null) {\n        entries[_RA] = input[_RA];\n    }\n    if (input[_RSN] != null) {\n        entries[_RSN] = input[_RSN];\n    }\n    if (input[_WIT] != null) {\n        entries[_WIT] = input[_WIT];\n    }\n    if (input[_PI] != null) {\n        entries[_PI] = input[_PI];\n    }\n    if (input[_PA] != null) {\n        const memberEntries = se_policyDescriptorListType(input[_PA], context);\n        if (input[_PA]?.length === 0) {\n            entries.PolicyArns = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `PolicyArns.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input[_P] != null) {\n        entries[_P] = input[_P];\n    }\n    if (input[_DS] != null) {\n        entries[_DS] = input[_DS];\n    }\n    return entries;\n};\nconst se_DecodeAuthorizationMessageRequest = (input, context) => {\n    const entries = {};\n    if (input[_EM] != null) {\n        entries[_EM] = input[_EM];\n    }\n    return entries;\n};\nconst se_GetAccessKeyInfoRequest = (input, context) => {\n    const entries = {};\n    if (input[_AKI] != null) {\n        entries[_AKI] = input[_AKI];\n    }\n    return entries;\n};\nconst se_GetCallerIdentityRequest = (input, context) => {\n    const entries = {};\n    return entries;\n};\nconst se_GetFederationTokenRequest = (input, context) => {\n    const entries = {};\n    if (input[_N] != null) {\n        entries[_N] = input[_N];\n    }\n    if (input[_P] != null) {\n        entries[_P] = input[_P];\n    }\n    if (input[_PA] != null) {\n        const memberEntries = se_policyDescriptorListType(input[_PA], context);\n        if (input[_PA]?.length === 0) {\n            entries.PolicyArns = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `PolicyArns.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input[_DS] != null) {\n        entries[_DS] = input[_DS];\n    }\n    if (input[_T] != null) {\n        const memberEntries = se_tagListType(input[_T], context);\n        if (input[_T]?.length === 0) {\n            entries.Tags = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `Tags.${key}`;\n            entries[loc] = value;\n        });\n    }\n    return entries;\n};\nconst se_GetSessionTokenRequest = (input, context) => {\n    const entries = {};\n    if (input[_DS] != null) {\n        entries[_DS] = input[_DS];\n    }\n    if (input[_SN] != null) {\n        entries[_SN] = input[_SN];\n    }\n    if (input[_TC] != null) {\n        entries[_TC] = input[_TC];\n    }\n    return entries;\n};\nconst se_policyDescriptorListType = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        const memberEntries = se_PolicyDescriptorType(entry, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            entries[`member.${counter}.${key}`] = value;\n        });\n        counter++;\n    }\n    return entries;\n};\nconst se_PolicyDescriptorType = (input, context) => {\n    const entries = {};\n    if (input[_a] != null) {\n        entries[_a] = input[_a];\n    }\n    return entries;\n};\nconst se_ProvidedContext = (input, context) => {\n    const entries = {};\n    if (input[_PAro] != null) {\n        entries[_PAro] = input[_PAro];\n    }\n    if (input[_CA] != null) {\n        entries[_CA] = input[_CA];\n    }\n    return entries;\n};\nconst se_ProvidedContextsListType = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        const memberEntries = se_ProvidedContext(entry, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            entries[`member.${counter}.${key}`] = value;\n        });\n        counter++;\n    }\n    return entries;\n};\nconst se_Tag = (input, context) => {\n    const entries = {};\n    if (input[_K] != null) {\n        entries[_K] = input[_K];\n    }\n    if (input[_Va] != null) {\n        entries[_Va] = input[_Va];\n    }\n    return entries;\n};\nconst se_tagKeyListType = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        entries[`member.${counter}`] = entry;\n        counter++;\n    }\n    return entries;\n};\nconst se_tagListType = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        const memberEntries = se_Tag(entry, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            entries[`member.${counter}.${key}`] = value;\n        });\n        counter++;\n    }\n    return entries;\n};\nconst de_AssumedRoleUser = (output, context) => {\n    const contents = {};\n    if (output[_ARI] != null) {\n        contents[_ARI] = __expectString(output[_ARI]);\n    }\n    if (output[_Ar] != null) {\n        contents[_Ar] = __expectString(output[_Ar]);\n    }\n    return contents;\n};\nconst de_AssumeRoleResponse = (output, context) => {\n    const contents = {};\n    if (output[_C] != null) {\n        contents[_C] = de_Credentials(output[_C], context);\n    }\n    if (output[_ARU] != null) {\n        contents[_ARU] = de_AssumedRoleUser(output[_ARU], context);\n    }\n    if (output[_PPS] != null) {\n        contents[_PPS] = __strictParseInt32(output[_PPS]);\n    }\n    if (output[_SI] != null) {\n        contents[_SI] = __expectString(output[_SI]);\n    }\n    return contents;\n};\nconst de_AssumeRoleWithSAMLResponse = (output, context) => {\n    const contents = {};\n    if (output[_C] != null) {\n        contents[_C] = de_Credentials(output[_C], context);\n    }\n    if (output[_ARU] != null) {\n        contents[_ARU] = de_AssumedRoleUser(output[_ARU], context);\n    }\n    if (output[_PPS] != null) {\n        contents[_PPS] = __strictParseInt32(output[_PPS]);\n    }\n    if (output[_S] != null) {\n        contents[_S] = __expectString(output[_S]);\n    }\n    if (output[_ST] != null) {\n        contents[_ST] = __expectString(output[_ST]);\n    }\n    if (output[_I] != null) {\n        contents[_I] = __expectString(output[_I]);\n    }\n    if (output[_Au] != null) {\n        contents[_Au] = __expectString(output[_Au]);\n    }\n    if (output[_NQ] != null) {\n        contents[_NQ] = __expectString(output[_NQ]);\n    }\n    if (output[_SI] != null) {\n        contents[_SI] = __expectString(output[_SI]);\n    }\n    return contents;\n};\nconst de_AssumeRoleWithWebIdentityResponse = (output, context) => {\n    const contents = {};\n    if (output[_C] != null) {\n        contents[_C] = de_Credentials(output[_C], context);\n    }\n    if (output[_SFWIT] != null) {\n        contents[_SFWIT] = __expectString(output[_SFWIT]);\n    }\n    if (output[_ARU] != null) {\n        contents[_ARU] = de_AssumedRoleUser(output[_ARU], context);\n    }\n    if (output[_PPS] != null) {\n        contents[_PPS] = __strictParseInt32(output[_PPS]);\n    }\n    if (output[_Pr] != null) {\n        contents[_Pr] = __expectString(output[_Pr]);\n    }\n    if (output[_Au] != null) {\n        contents[_Au] = __expectString(output[_Au]);\n    }\n    if (output[_SI] != null) {\n        contents[_SI] = __expectString(output[_SI]);\n    }\n    return contents;\n};\nconst de_Credentials = (output, context) => {\n    const contents = {};\n    if (output[_AKI] != null) {\n        contents[_AKI] = __expectString(output[_AKI]);\n    }\n    if (output[_SAK] != null) {\n        contents[_SAK] = __expectString(output[_SAK]);\n    }\n    if (output[_STe] != null) {\n        contents[_STe] = __expectString(output[_STe]);\n    }\n    if (output[_E] != null) {\n        contents[_E] = __expectNonNull(__parseRfc3339DateTimeWithOffset(output[_E]));\n    }\n    return contents;\n};\nconst de_DecodeAuthorizationMessageResponse = (output, context) => {\n    const contents = {};\n    if (output[_DM] != null) {\n        contents[_DM] = __expectString(output[_DM]);\n    }\n    return contents;\n};\nconst de_ExpiredTokenException = (output, context) => {\n    const contents = {};\n    if (output[_m] != null) {\n        contents[_m] = __expectString(output[_m]);\n    }\n    return contents;\n};\nconst de_FederatedUser = (output, context) => {\n    const contents = {};\n    if (output[_FUI] != null) {\n        contents[_FUI] = __expectString(output[_FUI]);\n    }\n    if (output[_Ar] != null) {\n        contents[_Ar] = __expectString(output[_Ar]);\n    }\n    return contents;\n};\nconst de_GetAccessKeyInfoResponse = (output, context) => {\n    const contents = {};\n    if (output[_Ac] != null) {\n        contents[_Ac] = __expectString(output[_Ac]);\n    }\n    return contents;\n};\nconst de_GetCallerIdentityResponse = (output, context) => {\n    const contents = {};\n    if (output[_UI] != null) {\n        contents[_UI] = __expectString(output[_UI]);\n    }\n    if (output[_Ac] != null) {\n        contents[_Ac] = __expectString(output[_Ac]);\n    }\n    if (output[_Ar] != null) {\n        contents[_Ar] = __expectString(output[_Ar]);\n    }\n    return contents;\n};\nconst de_GetFederationTokenResponse = (output, context) => {\n    const contents = {};\n    if (output[_C] != null) {\n        contents[_C] = de_Credentials(output[_C], context);\n    }\n    if (output[_FU] != null) {\n        contents[_FU] = de_FederatedUser(output[_FU], context);\n    }\n    if (output[_PPS] != null) {\n        contents[_PPS] = __strictParseInt32(output[_PPS]);\n    }\n    return contents;\n};\nconst de_GetSessionTokenResponse = (output, context) => {\n    const contents = {};\n    if (output[_C] != null) {\n        contents[_C] = de_Credentials(output[_C], context);\n    }\n    return contents;\n};\nconst de_IDPCommunicationErrorException = (output, context) => {\n    const contents = {};\n    if (output[_m] != null) {\n        contents[_m] = __expectString(output[_m]);\n    }\n    return contents;\n};\nconst de_IDPRejectedClaimException = (output, context) => {\n    const contents = {};\n    if (output[_m] != null) {\n        contents[_m] = __expectString(output[_m]);\n    }\n    return contents;\n};\nconst de_InvalidAuthorizationMessageException = (output, context) => {\n    const contents = {};\n    if (output[_m] != null) {\n        contents[_m] = __expectString(output[_m]);\n    }\n    return contents;\n};\nconst de_InvalidIdentityTokenException = (output, context) => {\n    const contents = {};\n    if (output[_m] != null) {\n        contents[_m] = __expectString(output[_m]);\n    }\n    return contents;\n};\nconst de_MalformedPolicyDocumentException = (output, context) => {\n    const contents = {};\n    if (output[_m] != null) {\n        contents[_m] = __expectString(output[_m]);\n    }\n    return contents;\n};\nconst de_PackedPolicyTooLargeException = (output, context) => {\n    const contents = {};\n    if (output[_m] != null) {\n        contents[_m] = __expectString(output[_m]);\n    }\n    return contents;\n};\nconst de_RegionDisabledException = (output, context) => {\n    const contents = {};\n    if (output[_m] != null) {\n        contents[_m] = __expectString(output[_m]);\n    }\n    return contents;\n};\nconst deserializeMetadata = (output) => ({\n    httpStatusCode: output.statusCode,\n    requestId: output.headers[\"x-amzn-requestid\"] ?? output.headers[\"x-amzn-request-id\"] ?? output.headers[\"x-amz-request-id\"],\n    extendedRequestId: output.headers[\"x-amz-id-2\"],\n    cfId: output.headers[\"x-amz-cf-id\"],\n});\nconst collectBodyString = (streamBody, context) => collectBody(streamBody, context).then((body) => context.utf8Encoder(body));\nconst throwDefaultError = withBaseException(__BaseException);\nconst buildHttpRpcRequest = async (context, headers, path, resolvedHostname, body) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const contents = {\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        path: basePath.endsWith(\"/\") ? basePath.slice(0, -1) + path : basePath + path,\n        headers,\n    };\n    if (resolvedHostname !== undefined) {\n        contents.hostname = resolvedHostname;\n    }\n    if (body !== undefined) {\n        contents.body = body;\n    }\n    return new __HttpRequest(contents);\n};\nconst SHARED_HEADERS = {\n    \"content-type\": \"application/x-www-form-urlencoded\",\n};\nconst _ = \"2011-06-15\";\nconst _A = \"Action\";\nconst _AKI = \"AccessKeyId\";\nconst _AR = \"AssumeRole\";\nconst _ARI = \"AssumedRoleId\";\nconst _ARU = \"AssumedRoleUser\";\nconst _ARWSAML = \"AssumeRoleWithSAML\";\nconst _ARWWI = \"AssumeRoleWithWebIdentity\";\nconst _Ac = \"Account\";\nconst _Ar = \"Arn\";\nconst _Au = \"Audience\";\nconst _C = \"Credentials\";\nconst _CA = \"ContextAssertion\";\nconst _DAM = \"DecodeAuthorizationMessage\";\nconst _DM = \"DecodedMessage\";\nconst _DS = \"DurationSeconds\";\nconst _E = \"Expiration\";\nconst _EI = \"ExternalId\";\nconst _EM = \"EncodedMessage\";\nconst _FU = \"FederatedUser\";\nconst _FUI = \"FederatedUserId\";\nconst _GAKI = \"GetAccessKeyInfo\";\nconst _GCI = \"GetCallerIdentity\";\nconst _GFT = \"GetFederationToken\";\nconst _GST = \"GetSessionToken\";\nconst _I = \"Issuer\";\nconst _K = \"Key\";\nconst _N = \"Name\";\nconst _NQ = \"NameQualifier\";\nconst _P = \"Policy\";\nconst _PA = \"PolicyArns\";\nconst _PAr = \"PrincipalArn\";\nconst _PAro = \"ProviderArn\";\nconst _PC = \"ProvidedContexts\";\nconst _PI = \"ProviderId\";\nconst _PPS = \"PackedPolicySize\";\nconst _Pr = \"Provider\";\nconst _RA = \"RoleArn\";\nconst _RSN = \"RoleSessionName\";\nconst _S = \"Subject\";\nconst _SAK = \"SecretAccessKey\";\nconst _SAMLA = \"SAMLAssertion\";\nconst _SFWIT = \"SubjectFromWebIdentityToken\";\nconst _SI = \"SourceIdentity\";\nconst _SN = \"SerialNumber\";\nconst _ST = \"SubjectType\";\nconst _STe = \"SessionToken\";\nconst _T = \"Tags\";\nconst _TC = \"TokenCode\";\nconst _TTK = \"TransitiveTagKeys\";\nconst _UI = \"UserId\";\nconst _V = \"Version\";\nconst _Va = \"Value\";\nconst _WIT = \"WebIdentityToken\";\nconst _a = \"arn\";\nconst _m = \"message\";\nconst parseBody = (streamBody, context) => collectBodyString(streamBody, context).then((encoded) => {\n    if (encoded.length) {\n        const parser = new XMLParser({\n            attributeNamePrefix: \"\",\n            htmlEntities: true,\n            ignoreAttributes: false,\n            ignoreDeclaration: true,\n            parseTagValue: false,\n            trimValues: false,\n            tagValueProcessor: (_, val) => (val.trim() === \"\" && val.includes(\"\\n\") ? \"\" : undefined),\n        });\n        parser.addEntity(\"#xD\", \"\\r\");\n        parser.addEntity(\"#10\", \"\\n\");\n        const parsedObj = parser.parse(encoded);\n        const textNodeName = \"#text\";\n        const key = Object.keys(parsedObj)[0];\n        const parsedObjToReturn = parsedObj[key];\n        if (parsedObjToReturn[textNodeName]) {\n            parsedObjToReturn[key] = parsedObjToReturn[textNodeName];\n            delete parsedObjToReturn[textNodeName];\n        }\n        return __getValueFromTextNode(parsedObjToReturn);\n    }\n    return {};\n});\nconst parseErrorBody = async (errorBody, context) => {\n    const value = await parseBody(errorBody, context);\n    if (value.Error) {\n        value.Error.message = value.Error.message ?? value.Error.Message;\n    }\n    return value;\n};\nconst buildFormUrlencodedString = (formEntries) => Object.entries(formEntries)\n    .map(([key, value]) => __extendedEncodeURIComponent(key) + \"=\" + __extendedEncodeURIComponent(value))\n    .join(\"&\");\nconst loadQueryErrorCode = (output, data) => {\n    if (data.Error?.Code !== undefined) {\n        return data.Error.Code;\n    }\n    if (output.statusCode == 404) {\n        return \"NotFound\";\n    }\n};\n","import { getEndpointPlugin } from \"@smithy/middleware-endpoint\";\nimport { getSerdePlugin } from \"@smithy/middleware-serde\";\nimport { Command as $Command } from \"@smithy/smithy-client\";\nimport { commonParams } from \"../endpoint/EndpointParameters\";\nimport { AssumeRoleResponseFilterSensitiveLog } from \"../models/models_0\";\nimport { de_AssumeRoleCommand, se_AssumeRoleCommand } from \"../protocols/Aws_query\";\nexport { $Command };\nexport class AssumeRoleCommand extends $Command\n    .classBuilder()\n    .ep({\n    ...commonParams,\n})\n    .m(function (Command, cs, config, o) {\n    return [\n        getSerdePlugin(config, this.serialize, this.deserialize),\n        getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"AWSSecurityTokenServiceV20110615\", \"AssumeRole\", {})\n    .n(\"STSClient\", \"AssumeRoleCommand\")\n    .f(void 0, AssumeRoleResponseFilterSensitiveLog)\n    .ser(se_AssumeRoleCommand)\n    .de(de_AssumeRoleCommand)\n    .build() {\n}\n","import { getEndpointPlugin } from \"@smithy/middleware-endpoint\";\nimport { getSerdePlugin } from \"@smithy/middleware-serde\";\nimport { Command as $Command } from \"@smithy/smithy-client\";\nimport { commonParams } from \"../endpoint/EndpointParameters\";\nimport { AssumeRoleWithWebIdentityRequestFilterSensitiveLog, AssumeRoleWithWebIdentityResponseFilterSensitiveLog, } from \"../models/models_0\";\nimport { de_AssumeRoleWithWebIdentityCommand, se_AssumeRoleWithWebIdentityCommand } from \"../protocols/Aws_query\";\nexport { $Command };\nexport class AssumeRoleWithWebIdentityCommand extends $Command\n    .classBuilder()\n    .ep({\n    ...commonParams,\n})\n    .m(function (Command, cs, config, o) {\n    return [\n        getSerdePlugin(config, this.serialize, this.deserialize),\n        getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"AWSSecurityTokenServiceV20110615\", \"AssumeRoleWithWebIdentity\", {})\n    .n(\"STSClient\", \"AssumeRoleWithWebIdentityCommand\")\n    .f(AssumeRoleWithWebIdentityRequestFilterSensitiveLog, AssumeRoleWithWebIdentityResponseFilterSensitiveLog)\n    .ser(se_AssumeRoleWithWebIdentityCommand)\n    .de(de_AssumeRoleWithWebIdentityCommand)\n    .build() {\n}\n","import { AssumeRoleCommand } from \"./commands/AssumeRoleCommand\";\nimport { AssumeRoleWithWebIdentityCommand, } from \"./commands/AssumeRoleWithWebIdentityCommand\";\nconst ASSUME_ROLE_DEFAULT_REGION = \"us-east-1\";\nconst resolveRegion = async (_region, _parentRegion, credentialProviderLogger) => {\n    const region = typeof _region === \"function\" ? await _region() : _region;\n    const parentRegion = typeof _parentRegion === \"function\" ? await _parentRegion() : _parentRegion;\n    credentialProviderLogger?.debug?.(\"@aws-sdk/client-sts::resolveRegion\", \"accepting first of:\", `${region} (provider)`, `${parentRegion} (parent client)`, `${ASSUME_ROLE_DEFAULT_REGION} (STS default)`);\n    return region ?? parentRegion ?? ASSUME_ROLE_DEFAULT_REGION;\n};\nexport const getDefaultRoleAssumer = (stsOptions, stsClientCtor) => {\n    let stsClient;\n    let closureSourceCreds;\n    return async (sourceCreds, params) => {\n        closureSourceCreds = sourceCreds;\n        if (!stsClient) {\n            const { logger = stsOptions?.parentClientConfig?.logger, region, requestHandler = stsOptions?.parentClientConfig?.requestHandler, credentialProviderLogger, } = stsOptions;\n            const resolvedRegion = await resolveRegion(region, stsOptions?.parentClientConfig?.region, credentialProviderLogger);\n            stsClient = new stsClientCtor({\n                credentialDefaultProvider: () => async () => closureSourceCreds,\n                region: resolvedRegion,\n                requestHandler: requestHandler,\n                logger: logger,\n            });\n        }\n        const { Credentials } = await stsClient.send(new AssumeRoleCommand(params));\n        if (!Credentials || !Credentials.AccessKeyId || !Credentials.SecretAccessKey) {\n            throw new Error(`Invalid response from STS.assumeRole call with role ${params.RoleArn}`);\n        }\n        return {\n            accessKeyId: Credentials.AccessKeyId,\n            secretAccessKey: Credentials.SecretAccessKey,\n            sessionToken: Credentials.SessionToken,\n            expiration: Credentials.Expiration,\n            credentialScope: Credentials.CredentialScope,\n        };\n    };\n};\nexport const getDefaultRoleAssumerWithWebIdentity = (stsOptions, stsClientCtor) => {\n    let stsClient;\n    return async (params) => {\n        if (!stsClient) {\n            const { logger = stsOptions?.parentClientConfig?.logger, region, requestHandler = stsOptions?.parentClientConfig?.requestHandler, credentialProviderLogger, } = stsOptions;\n            const resolvedRegion = await resolveRegion(region, stsOptions?.parentClientConfig?.region, credentialProviderLogger);\n            stsClient = new stsClientCtor({\n                region: resolvedRegion,\n                requestHandler: requestHandler,\n                logger: logger,\n            });\n        }\n        const { Credentials } = await stsClient.send(new AssumeRoleWithWebIdentityCommand(params));\n        if (!Credentials || !Credentials.AccessKeyId || !Credentials.SecretAccessKey) {\n            throw new Error(`Invalid response from STS.assumeRoleWithWebIdentity call with role ${params.RoleArn}`);\n        }\n        return {\n            accessKeyId: Credentials.AccessKeyId,\n            secretAccessKey: Credentials.SecretAccessKey,\n            sessionToken: Credentials.SessionToken,\n            expiration: Credentials.Expiration,\n            credentialScope: Credentials.CredentialScope,\n        };\n    };\n};\nexport const decorateDefaultCredentialProvider = (provider) => (input) => provider({\n    roleAssumer: getDefaultRoleAssumer(input, input.stsClientCtor),\n    roleAssumerWithWebIdentity: getDefaultRoleAssumerWithWebIdentity(input, input.stsClientCtor),\n    ...input,\n});\n","import { resolveAwsSdkSigV4Config, } from \"@aws-sdk/core\";\nimport { getSmithyContext, normalizeProvider } from \"@smithy/util-middleware\";\nimport { STSClient } from \"../STSClient\";\nexport const defaultSTSHttpAuthSchemeParametersProvider = async (config, context, input) => {\n    return {\n        operation: getSmithyContext(context).operation,\n        region: (await normalizeProvider(config.region)()) ||\n            (() => {\n                throw new Error(\"expected `region` to be configured for `aws.auth#sigv4`\");\n            })(),\n    };\n};\nfunction createAwsAuthSigv4HttpAuthOption(authParameters) {\n    return {\n        schemeId: \"aws.auth#sigv4\",\n        signingProperties: {\n            name: \"sts\",\n            region: authParameters.region,\n        },\n        propertiesExtractor: (config, context) => ({\n            signingProperties: {\n                config,\n                context,\n            },\n        }),\n    };\n}\nfunction createSmithyApiNoAuthHttpAuthOption(authParameters) {\n    return {\n        schemeId: \"smithy.api#noAuth\",\n    };\n}\nexport const defaultSTSHttpAuthSchemeProvider = (authParameters) => {\n    const options = [];\n    switch (authParameters.operation) {\n        case \"AssumeRoleWithSAML\": {\n            options.push(createSmithyApiNoAuthHttpAuthOption(authParameters));\n            break;\n        }\n        case \"AssumeRoleWithWebIdentity\": {\n            options.push(createSmithyApiNoAuthHttpAuthOption(authParameters));\n            break;\n        }\n        default: {\n            options.push(createAwsAuthSigv4HttpAuthOption(authParameters));\n        }\n    }\n    return options;\n};\nexport const resolveStsAuthConfig = (input) => ({\n    ...input,\n    stsClientCtor: STSClient,\n});\nexport const resolveHttpAuthSchemeConfig = (config) => {\n    const config_0 = resolveStsAuthConfig(config);\n    const config_1 = resolveAwsSdkSigV4Config(config_0);\n    return {\n        ...config_1,\n    };\n};\n","export const defaultProvider = ((input) => {\n    return () => import(\"@aws-sdk/credential-provider-node\").then(({ defaultProvider }) => defaultProvider(input)());\n});\n","const F = \"required\", G = \"type\", H = \"fn\", I = \"argv\", J = \"ref\";\nconst a = false, b = true, c = \"booleanEquals\", d = \"stringEquals\", e = \"sigv4\", f = \"sts\", g = \"us-east-1\", h = \"endpoint\", i = \"https://sts.{Region}.{PartitionResult#dnsSuffix}\", j = \"tree\", k = \"error\", l = \"getAttr\", m = { [F]: false, [G]: \"String\" }, n = { [F]: true, \"default\": false, [G]: \"Boolean\" }, o = { [J]: \"Endpoint\" }, p = { [H]: \"isSet\", [I]: [{ [J]: \"Region\" }] }, q = { [J]: \"Region\" }, r = { [H]: \"aws.partition\", [I]: [q], \"assign\": \"PartitionResult\" }, s = { [J]: \"UseFIPS\" }, t = { [J]: \"UseDualStack\" }, u = { \"url\": \"https://sts.amazonaws.com\", \"properties\": { \"authSchemes\": [{ \"name\": e, \"signingName\": f, \"signingRegion\": g }] }, \"headers\": {} }, v = {}, w = { \"conditions\": [{ [H]: d, [I]: [q, \"aws-global\"] }], [h]: u, [G]: h }, x = { [H]: c, [I]: [s, true] }, y = { [H]: c, [I]: [t, true] }, z = { [H]: l, [I]: [{ [J]: \"PartitionResult\" }, \"supportsFIPS\"] }, A = { [J]: \"PartitionResult\" }, B = { [H]: c, [I]: [true, { [H]: l, [I]: [A, \"supportsDualStack\"] }] }, C = [{ [H]: \"isSet\", [I]: [o] }], D = [x], E = [y];\nconst _data = { version: \"1.0\", parameters: { Region: m, UseDualStack: n, UseFIPS: n, Endpoint: m, UseGlobalEndpoint: n }, rules: [{ conditions: [{ [H]: c, [I]: [{ [J]: \"UseGlobalEndpoint\" }, b] }, { [H]: \"not\", [I]: C }, p, r, { [H]: c, [I]: [s, a] }, { [H]: c, [I]: [t, a] }], rules: [{ conditions: [{ [H]: d, [I]: [q, \"ap-northeast-1\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"ap-south-1\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"ap-southeast-1\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"ap-southeast-2\"] }], endpoint: u, [G]: h }, w, { conditions: [{ [H]: d, [I]: [q, \"ca-central-1\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"eu-central-1\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"eu-north-1\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"eu-west-1\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"eu-west-2\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"eu-west-3\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"sa-east-1\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, g] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"us-east-2\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"us-west-1\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"us-west-2\"] }], endpoint: u, [G]: h }, { endpoint: { url: i, properties: { authSchemes: [{ name: e, signingName: f, signingRegion: \"{Region}\" }] }, headers: v }, [G]: h }], [G]: j }, { conditions: C, rules: [{ conditions: D, error: \"Invalid Configuration: FIPS and custom endpoint are not supported\", [G]: k }, { conditions: E, error: \"Invalid Configuration: Dualstack and custom endpoint are not supported\", [G]: k }, { endpoint: { url: o, properties: v, headers: v }, [G]: h }], [G]: j }, { conditions: [p], rules: [{ conditions: [r], rules: [{ conditions: [x, y], rules: [{ conditions: [{ [H]: c, [I]: [b, z] }, B], rules: [{ endpoint: { url: \"https://sts-fips.{Region}.{PartitionResult#dualStackDnsSuffix}\", properties: v, headers: v }, [G]: h }], [G]: j }, { error: \"FIPS and DualStack are enabled, but this partition does not support one or both\", [G]: k }], [G]: j }, { conditions: D, rules: [{ conditions: [{ [H]: c, [I]: [z, b] }], rules: [{ conditions: [{ [H]: d, [I]: [{ [H]: l, [I]: [A, \"name\"] }, \"aws-us-gov\"] }], endpoint: { url: \"https://sts.{Region}.amazonaws.com\", properties: v, headers: v }, [G]: h }, { endpoint: { url: \"https://sts-fips.{Region}.{PartitionResult#dnsSuffix}\", properties: v, headers: v }, [G]: h }], [G]: j }, { error: \"FIPS is enabled but this partition does not support FIPS\", [G]: k }], [G]: j }, { conditions: E, rules: [{ conditions: [B], rules: [{ endpoint: { url: \"https://sts.{Region}.{PartitionResult#dualStackDnsSuffix}\", properties: v, headers: v }, [G]: h }], [G]: j }, { error: \"DualStack is enabled but this partition does not support DualStack\", [G]: k }], [G]: j }, w, { endpoint: { url: i, properties: v, headers: v }, [G]: h }], [G]: j }], [G]: j }, { error: \"Invalid Configuration: Missing Region\", [G]: k }] };\nexport const ruleSet = _data;\n","import { resolveEndpoint } from \"@smithy/util-endpoints\";\nimport { ruleSet } from \"./ruleset\";\nexport const defaultEndpointResolver = (endpointParams, context = {}) => {\n    return resolveEndpoint(ruleSet, {\n        endpointParams: endpointParams,\n        logger: context.logger,\n    });\n};\n","import { AwsSdkSigV4Signer } from \"@aws-sdk/core\";\nimport { NoAuthSigner } from \"@smithy/core\";\nimport { NoOpLogger } from \"@smithy/smithy-client\";\nimport { parseUrl } from \"@smithy/url-parser\";\nimport { fromBase64, toBase64 } from \"@smithy/util-base64\";\nimport { fromUtf8, toUtf8 } from \"@smithy/util-utf8\";\nimport { defaultSTSHttpAuthSchemeProvider } from \"./auth/httpAuthSchemeProvider\";\nimport { defaultEndpointResolver } from \"./endpoint/endpointResolver\";\nexport const getRuntimeConfig = (config) => {\n    return {\n        apiVersion: \"2011-06-15\",\n        base64Decoder: config?.base64Decoder ?? fromBase64,\n        base64Encoder: config?.base64Encoder ?? toBase64,\n        disableHostPrefix: config?.disableHostPrefix ?? false,\n        endpointProvider: config?.endpointProvider ?? defaultEndpointResolver,\n        extensions: config?.extensions ?? [],\n        httpAuthSchemeProvider: config?.httpAuthSchemeProvider ?? defaultSTSHttpAuthSchemeProvider,\n        httpAuthSchemes: config?.httpAuthSchemes ?? [\n            {\n                schemeId: \"aws.auth#sigv4\",\n                identityProvider: (ipc) => ipc.getIdentityProvider(\"aws.auth#sigv4\"),\n                signer: new AwsSdkSigV4Signer(),\n            },\n            {\n                schemeId: \"smithy.api#noAuth\",\n                identityProvider: (ipc) => ipc.getIdentityProvider(\"smithy.api#noAuth\") || (async () => ({})),\n                signer: new NoAuthSigner(),\n            },\n        ],\n        logger: config?.logger ?? new NoOpLogger(),\n        serviceId: config?.serviceId ?? \"STS\",\n        urlParser: config?.urlParser ?? parseUrl,\n        utf8Decoder: config?.utf8Decoder ?? fromUtf8,\n        utf8Encoder: config?.utf8Encoder ?? toUtf8,\n    };\n};\n","import packageInfo from \"../package.json\";\nimport { defaultProvider as credentialDefaultProvider } from \"./credentialDefaultProvider\";\nimport { AwsSdkSigV4Signer, emitWarningIfUnsupportedVersion as awsCheckVersion } from \"@aws-sdk/core\";\nimport { defaultUserAgent } from \"@aws-sdk/util-user-agent-node\";\nimport { NODE_REGION_CONFIG_FILE_OPTIONS, NODE_REGION_CONFIG_OPTIONS, NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS, NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS, } from \"@smithy/config-resolver\";\nimport { NoAuthSigner } from \"@smithy/core\";\nimport { Hash } from \"@smithy/hash-node\";\nimport { NODE_MAX_ATTEMPT_CONFIG_OPTIONS, NODE_RETRY_MODE_CONFIG_OPTIONS } from \"@smithy/middleware-retry\";\nimport { loadConfig as loadNodeConfig } from \"@smithy/node-config-provider\";\nimport { NodeHttpHandler as RequestHandler, streamCollector } from \"@smithy/node-http-handler\";\nimport { calculateBodyLength } from \"@smithy/util-body-length-node\";\nimport { DEFAULT_RETRY_MODE } from \"@smithy/util-retry\";\nimport { getRuntimeConfig as getSharedRuntimeConfig } from \"./runtimeConfig.shared\";\nimport { loadConfigsForDefaultMode } from \"@smithy/smithy-client\";\nimport { resolveDefaultsModeConfig } from \"@smithy/util-defaults-mode-node\";\nimport { emitWarningIfUnsupportedVersion } from \"@smithy/smithy-client\";\nexport const getRuntimeConfig = (config) => {\n    emitWarningIfUnsupportedVersion(process.version);\n    const defaultsMode = resolveDefaultsModeConfig(config);\n    const defaultConfigProvider = () => defaultsMode().then(loadConfigsForDefaultMode);\n    const clientSharedValues = getSharedRuntimeConfig(config);\n    awsCheckVersion(process.version);\n    return {\n        ...clientSharedValues,\n        ...config,\n        runtime: \"node\",\n        defaultsMode,\n        bodyLengthChecker: config?.bodyLengthChecker ?? calculateBodyLength,\n        credentialDefaultProvider: config?.credentialDefaultProvider ?? credentialDefaultProvider,\n        defaultUserAgentProvider: config?.defaultUserAgentProvider ??\n            defaultUserAgent({ serviceId: clientSharedValues.serviceId, clientVersion: packageInfo.version }),\n        httpAuthSchemes: config?.httpAuthSchemes ?? [\n            {\n                schemeId: \"aws.auth#sigv4\",\n                identityProvider: (ipc) => ipc.getIdentityProvider(\"aws.auth#sigv4\") ||\n                    (async (idProps) => await credentialDefaultProvider(idProps?.__config || {})()),\n                signer: new AwsSdkSigV4Signer(),\n            },\n            {\n                schemeId: \"smithy.api#noAuth\",\n                identityProvider: (ipc) => ipc.getIdentityProvider(\"smithy.api#noAuth\") || (async () => ({})),\n                signer: new NoAuthSigner(),\n            },\n        ],\n        maxAttempts: config?.maxAttempts ?? loadNodeConfig(NODE_MAX_ATTEMPT_CONFIG_OPTIONS),\n        region: config?.region ?? loadNodeConfig(NODE_REGION_CONFIG_OPTIONS, NODE_REGION_CONFIG_FILE_OPTIONS),\n        requestHandler: RequestHandler.create(config?.requestHandler ?? defaultConfigProvider),\n        retryMode: config?.retryMode ??\n            loadNodeConfig({\n                ...NODE_RETRY_MODE_CONFIG_OPTIONS,\n                default: async () => (await defaultConfigProvider()).retryMode || DEFAULT_RETRY_MODE,\n            }),\n        sha256: config?.sha256 ?? Hash.bind(null, \"sha256\"),\n        streamCollector: config?.streamCollector ?? streamCollector,\n        useDualstackEndpoint: config?.useDualstackEndpoint ?? loadNodeConfig(NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS),\n        useFipsEndpoint: config?.useFipsEndpoint ?? loadNodeConfig(NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS),\n    };\n};\n","export const getHttpAuthExtensionConfiguration = (runtimeConfig) => {\n    const _httpAuthSchemes = runtimeConfig.httpAuthSchemes;\n    let _httpAuthSchemeProvider = runtimeConfig.httpAuthSchemeProvider;\n    let _credentials = runtimeConfig.credentials;\n    return {\n        setHttpAuthScheme(httpAuthScheme) {\n            const index = _httpAuthSchemes.findIndex((scheme) => scheme.schemeId === httpAuthScheme.schemeId);\n            if (index === -1) {\n                _httpAuthSchemes.push(httpAuthScheme);\n            }\n            else {\n                _httpAuthSchemes.splice(index, 1, httpAuthScheme);\n            }\n        },\n        httpAuthSchemes() {\n            return _httpAuthSchemes;\n        },\n        setHttpAuthSchemeProvider(httpAuthSchemeProvider) {\n            _httpAuthSchemeProvider = httpAuthSchemeProvider;\n        },\n        httpAuthSchemeProvider() {\n            return _httpAuthSchemeProvider;\n        },\n        setCredentials(credentials) {\n            _credentials = credentials;\n        },\n        credentials() {\n            return _credentials;\n        },\n    };\n};\nexport const resolveHttpAuthRuntimeConfig = (config) => {\n    return {\n        httpAuthSchemes: config.httpAuthSchemes(),\n        httpAuthSchemeProvider: config.httpAuthSchemeProvider(),\n        credentials: config.credentials(),\n    };\n};\n","import { getAwsRegionExtensionConfiguration, resolveAwsRegionExtensionConfiguration, } from \"@aws-sdk/region-config-resolver\";\nimport { getHttpHandlerExtensionConfiguration, resolveHttpHandlerRuntimeConfig } from \"@smithy/protocol-http\";\nimport { getDefaultExtensionConfiguration, resolveDefaultRuntimeConfig } from \"@smithy/smithy-client\";\nimport { getHttpAuthExtensionConfiguration, resolveHttpAuthRuntimeConfig } from \"./auth/httpAuthExtensionConfiguration\";\nconst asPartial = (t) => t;\nexport const resolveRuntimeExtensions = (runtimeConfig, extensions) => {\n    const extensionConfiguration = {\n        ...asPartial(getAwsRegionExtensionConfiguration(runtimeConfig)),\n        ...asPartial(getDefaultExtensionConfiguration(runtimeConfig)),\n        ...asPartial(getHttpHandlerExtensionConfiguration(runtimeConfig)),\n        ...asPartial(getHttpAuthExtensionConfiguration(runtimeConfig)),\n    };\n    extensions.forEach((extension) => extension.configure(extensionConfiguration));\n    return {\n        ...runtimeConfig,\n        ...resolveAwsRegionExtensionConfiguration(extensionConfiguration),\n        ...resolveDefaultRuntimeConfig(extensionConfiguration),\n        ...resolveHttpHandlerRuntimeConfig(extensionConfiguration),\n        ...resolveHttpAuthRuntimeConfig(extensionConfiguration),\n    };\n};\n","import { getHostHeaderPlugin, resolveHostHeaderConfig, } from \"@aws-sdk/middleware-host-header\";\nimport { getLoggerPlugin } from \"@aws-sdk/middleware-logger\";\nimport { getRecursionDetectionPlugin } from \"@aws-sdk/middleware-recursion-detection\";\nimport { getUserAgentPlugin, resolveUserAgentConfig, } from \"@aws-sdk/middleware-user-agent\";\nimport { resolveRegionConfig } from \"@smithy/config-resolver\";\nimport { DefaultIdentityProviderConfig, getHttpAuthSchemeEndpointRuleSetPlugin, getHttpSigningPlugin, } from \"@smithy/core\";\nimport { getContentLengthPlugin } from \"@smithy/middleware-content-length\";\nimport { resolveEndpointConfig } from \"@smithy/middleware-endpoint\";\nimport { getRetryPlugin, resolveRetryConfig } from \"@smithy/middleware-retry\";\nimport { Client as __Client, } from \"@smithy/smithy-client\";\nimport { defaultSTSHttpAuthSchemeParametersProvider, resolveHttpAuthSchemeConfig, } from \"./auth/httpAuthSchemeProvider\";\nimport { resolveClientEndpointParameters, } from \"./endpoint/EndpointParameters\";\nimport { getRuntimeConfig as __getRuntimeConfig } from \"./runtimeConfig\";\nimport { resolveRuntimeExtensions } from \"./runtimeExtensions\";\nexport { __Client };\nexport class STSClient extends __Client {\n    constructor(...[configuration]) {\n        const _config_0 = __getRuntimeConfig(configuration || {});\n        const _config_1 = resolveClientEndpointParameters(_config_0);\n        const _config_2 = resolveRegionConfig(_config_1);\n        const _config_3 = resolveEndpointConfig(_config_2);\n        const _config_4 = resolveRetryConfig(_config_3);\n        const _config_5 = resolveHostHeaderConfig(_config_4);\n        const _config_6 = resolveUserAgentConfig(_config_5);\n        const _config_7 = resolveHttpAuthSchemeConfig(_config_6);\n        const _config_8 = resolveRuntimeExtensions(_config_7, configuration?.extensions || []);\n        super(_config_8);\n        this.config = _config_8;\n        this.middlewareStack.use(getRetryPlugin(this.config));\n        this.middlewareStack.use(getContentLengthPlugin(this.config));\n        this.middlewareStack.use(getHostHeaderPlugin(this.config));\n        this.middlewareStack.use(getLoggerPlugin(this.config));\n        this.middlewareStack.use(getRecursionDetectionPlugin(this.config));\n        this.middlewareStack.use(getUserAgentPlugin(this.config));\n        this.middlewareStack.use(getHttpAuthSchemeEndpointRuleSetPlugin(this.config, {\n            httpAuthSchemeParametersProvider: this.getDefaultHttpAuthSchemeParametersProvider(),\n            identityProviderConfigProvider: this.getIdentityProviderConfigProvider(),\n        }));\n        this.middlewareStack.use(getHttpSigningPlugin(this.config));\n    }\n    destroy() {\n        super.destroy();\n    }\n    getDefaultHttpAuthSchemeParametersProvider() {\n        return defaultSTSHttpAuthSchemeParametersProvider;\n    }\n    getIdentityProviderConfigProvider() {\n        return async (config) => new DefaultIdentityProviderConfig({\n            \"aws.auth#sigv4\": config.credentials,\n        });\n    }\n}\n","import { getDefaultRoleAssumer as StsGetDefaultRoleAssumer, getDefaultRoleAssumerWithWebIdentity as StsGetDefaultRoleAssumerWithWebIdentity, } from \"./defaultStsRoleAssumers\";\nimport { STSClient } from \"./STSClient\";\nconst getCustomizableStsClientCtor = (baseCtor, customizations) => {\n    if (!customizations)\n        return baseCtor;\n    else\n        return class CustomizableSTSClient extends baseCtor {\n            constructor(config) {\n                super(config);\n                for (const customization of customizations) {\n                    this.middlewareStack.use(customization);\n                }\n            }\n        };\n};\nexport const getDefaultRoleAssumer = (stsOptions = {}, stsPlugins) => StsGetDefaultRoleAssumer(stsOptions, getCustomizableStsClientCtor(STSClient, stsPlugins));\nexport const getDefaultRoleAssumerWithWebIdentity = (stsOptions = {}, stsPlugins) => StsGetDefaultRoleAssumerWithWebIdentity(stsOptions, getCustomizableStsClientCtor(STSClient, stsPlugins));\nexport const decorateDefaultCredentialProvider = (provider) => (input) => provider({\n    roleAssumer: getDefaultRoleAssumer(input),\n    roleAssumerWithWebIdentity: getDefaultRoleAssumerWithWebIdentity(input),\n    ...input,\n});\n"],"names":["resolveClientEndpointParameters","options","commonParams","STSServiceException","ExpiredTokenException","opts","MalformedPolicyDocumentException","PackedPolicyTooLargeException","RegionDisabledException","IDPRejectedClaimException","InvalidIdentityTokenException","IDPCommunicationErrorException","InvalidAuthorizationMessageException","CredentialsFilterSensitiveLog","obj","AssumeRoleResponseFilterSensitiveLog","AssumeRoleWithSAMLRequestFilterSensitiveLog","AssumeRoleWithSAMLResponseFilterSensitiveLog","AssumeRoleWithWebIdentityRequestFilterSensitiveLog","AssumeRoleWithWebIdentityResponseFilterSensitiveLog","GetFederationTokenResponseFilterSensitiveLog","GetSessionTokenResponseFilterSensitiveLog","se_AssumeRoleCommand","input","context","headers","SHARED_HEADERS","body","buildFormUrlencodedString","se_AssumeRoleRequest","_A","_AR","_V","_","buildHttpRpcRequest","se_AssumeRoleWithSAMLCommand","se_AssumeRoleWithSAMLRequest","_ARWSAML","se_AssumeRoleWithWebIdentityCommand","se_AssumeRoleWithWebIdentityRequest","_ARWWI","se_DecodeAuthorizationMessageCommand","se_DecodeAuthorizationMessageRequest","_DAM","se_GetAccessKeyInfoCommand","se_GetAccessKeyInfoRequest","_GAKI","se_GetCallerIdentityCommand","se_GetCallerIdentityRequest","_GCI","se_GetFederationTokenCommand","se_GetFederationTokenRequest","_GFT","se_GetSessionTokenCommand","se_GetSessionTokenRequest","_GST","de_AssumeRoleCommand","output","de_CommandError","data","parseBody","contents","de_AssumeRoleResponse","deserializeMetadata","de_AssumeRoleWithSAMLCommand","de_AssumeRoleWithSAMLResponse","de_AssumeRoleWithWebIdentityCommand","de_AssumeRoleWithWebIdentityResponse","de_DecodeAuthorizationMessageCommand","de_DecodeAuthorizationMessageResponse","de_GetAccessKeyInfoCommand","de_GetAccessKeyInfoResponse","de_GetCallerIdentityCommand","de_GetCallerIdentityResponse","de_GetFederationTokenCommand","de_GetFederationTokenResponse","de_GetSessionTokenCommand","de_GetSessionTokenResponse","parsedOutput","parseErrorBody","errorCode","loadQueryErrorCode","de_ExpiredTokenExceptionRes","de_MalformedPolicyDocumentExceptionRes","de_PackedPolicyTooLargeExceptionRes","de_RegionDisabledExceptionRes","de_IDPRejectedClaimExceptionRes","de_InvalidIdentityTokenExceptionRes","de_IDPCommunicationErrorExceptionRes","de_InvalidAuthorizationMessageExceptionRes","parsedBody","throwDefaultError","deserialized","de_ExpiredTokenException","exception","de_IDPCommunicationErrorException","de_IDPRejectedClaimException","de_InvalidAuthorizationMessageException","de_InvalidIdentityTokenException","de_MalformedPolicyDocumentException","de_PackedPolicyTooLargeException","de_RegionDisabledException","entries","_RA","_RSN","_PA","memberEntries","se_policyDescriptorListType","key","value","loc","_P","_DS","_T","se_tagListType","_TTK","se_tagKeyListType","_EI","_SN","_TC","_SI","_PC","se_ProvidedContextsListType","_PAr","_SAMLA","_WIT","_PI","_EM","_AKI","_N","counter","entry","se_PolicyDescriptorType","_a","se_ProvidedContext","_PAro","_CA","se_Tag","_K","_Va","de_AssumedRoleUser","_ARI","_Ar","_C","de_Credentials","_ARU","_PPS","_S","_ST","_I","_Au","_NQ","_SFWIT","_Pr","_SAK","_STe","_E","_DM","_m","de_FederatedUser","_FUI","_Ac","_UI","_FU","collectBodyString","streamBody","path","resolvedHostname","hostname","protocol","port","basePath","encoded","parser","val","parsedObj","textNodeName","parsedObjToReturn","errorBody","formEntries","AssumeRoleCommand","Command","cs","config","AssumeRoleWithWebIdentityCommand","ASSUME_ROLE_DEFAULT_REGION","resolveRegion","_region","_parentRegion","credentialProviderLogger","region","parentRegion","getDefaultRoleAssumer","stsOptions","stsClientCtor","stsClient","closureSourceCreds","sourceCreds","params","logger","requestHandler","resolvedRegion","Credentials","getDefaultRoleAssumerWithWebIdentity","decorateDefaultCredentialProvider","provider","defaultSTSHttpAuthSchemeParametersProvider","createAwsAuthSigv4HttpAuthOption","authParameters","createSmithyApiNoAuthHttpAuthOption","defaultSTSHttpAuthSchemeProvider","resolveStsAuthConfig","STSClient","resolveHttpAuthSchemeConfig","config_0","resolveAwsSdkSigV4Config","defaultProvider","F","G","H","I","J","a","b","c","d","e","f","g","i","j","k","l","m","n","o","p","q","r","s","t","u","w","x","y","z","A","B","C","D","E","ruleSet","defaultEndpointResolver","endpointParams","getRuntimeConfig","ipc","AwsSdkSigV4Signer","defaultsMode","defaultConfigProvider","clientSharedValues","idProps","getHttpAuthExtensionConfiguration","runtimeConfig","_httpAuthSchemes","_httpAuthSchemeProvider","_credentials","httpAuthScheme","index","scheme","httpAuthSchemeProvider","credentials","resolveHttpAuthRuntimeConfig","asPartial","resolveRuntimeExtensions","extensions","extensionConfiguration","extension","configuration","_config_0","_config_1","_config_2","_config_3","_config_4","_config_5","_config_6","_config_7","_config_8","getCustomizableStsClientCtor","baseCtor","customizations","customization","stsPlugins"],"sourceRoot":""}